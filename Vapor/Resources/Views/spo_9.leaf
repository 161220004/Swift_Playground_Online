#set("title") { SPO Puzzle 3-3 }

#set("pagination_next") {
  <a href="/puzzle/8" class="white indigo-text waves-effect waves-indigo btn left"><< Previous</a>
  <a href="/chapter/4" class="white indigo-text waves-effect waves-indigo btn right">Next >></a>
}

#set("card_content") {
  <span class="card-title">第三章: 条件/循环</span>
  <span class="card-title card-subtitle">>>> 关卡3: 嵌套循环</span>
  <br>
  <p>目标：使用while循环的嵌套循环来绕螺旋走动。</p>
  <br>
  <p class="chapter-code-font">就像if语句一样，while循环允许你决定决定何时运行你的代码。
     while循环在布尔条件为真的情况下持续运行代码块；当条件为假时，while循环停止运行。</p><br>
  <p>在这一关中，注意宝石构成的螺旋，每个转折点处有一颗宝石。若要通关，你需要在一个循环里嵌套另一个。放心，其实这并没有那么难。</p>
  <p>在写代码前，请先构思清楚。在螺旋的第一条边，必须向前走，直到有宝石可以收集；收集宝石后，向左转，准备开始走螺旋的下一条边。
     这个模式一直重复，直至到达螺旋最内部的点，且再也没有砖块可走。</p>
  <p>在编写使用嵌套循环的代码时，你需要逆向思考。你为本关卡编写的第一个循环代表的是上述逻辑的最后一部分，即“重复直至最内部”的部分。</p><br>
  <p>我们为这一关提供了一种新的条件： <span class="chapter-code-font">hasBlockForward</span> 。
     这个条件将检查当前Lappland所面向方向的前面一格是否存在砖块可供行走，如果存在，则为真；否则为假。</p>
  <br>
  <p class="chapter-code-font">在这一关我们提供的命令包括：goForward()、turnLeft()、turnRight()以及collect()。</p>
  <p class="chapter-code-font">提供的两种条件是：位于宝石处（isOnGem），以及前方是否存在砖块（hasBlockForward）。</p>
  <br>
  <p>(1) 向外循环添加一个条件，使Lappland在无路可走之前一直重复内循环；</p>
  <p>(2) 调整内循环，使Lappland在遇到可以收集的宝石之前一直往前走；</p>
  <p>(3) 一旦Lappland遇到宝石，则收集宝石并向左转；</p>
}

#set("collapsible_body") {
  <span>你需要编写两个循环：外循环在Lappland前方还有砖块的时候运行；内循环使Lappland没有遇到宝石时向前走。</span><br>
  <span>外循环将一直运行内循环，直到外循环停止。通过这种方式，内循环持续运行，直至满足最后的终止条件。</span><br>
  <span class="chapter-code-font">为了判断一个条件condition为假，你可以使用“condition == false”，也可以使用取反符号“!condition”</span><br>
  <span class="chapter-code-font">需要注意的是，while的条件不能始终为真，否则会进入死循环无法退出。</span>
}

#set("editor") {
  <span class="purple-text my-code-font">while </span>
  <div class="input-field inline my-narrow-input">
    <input id="exter_cond" type="text" class="validate my-code-font">
    <label for="exter_cond">Condition</label>
  </div>
  <span class="my-code-font"> {</span><br>
  <div class="my-tap-code">
    <span class="purple-text my-code-font">while </span>
    <div class="input-field inline my-very-narrow-input">
      <input id="inner_cond" type="text" class="validate my-code-font">
      <label for="inner_cond">Condition</label>
    </div>
    <span class="my-code-font"> {</span><br>
    <div id="func_editor_small" class="z-depth-1"></div>
    <span class="my-code-font">\}</span><br><br>
    <div id="func_editor_big" class="z-depth-1"></div>
  </div>
  <span class="my-code-font">\}</span>
}

#set("editor_js") {
  <script src="/js/Ace/RunFunc9.js" type="text/javascript"></script>
  <script src="/js/Ace/AutoComplete9.js" type="text/javascript"></script>
}

#set("pagination_all") {
  <ul class="pagination">
    <li class="waves-effect"><a href="/puzzle/8"><i class="material-icons">chevron_left</i></a></li>
    <li class="waves-effect"><a href="/puzzle/6">2-3</a></li>
    <li class="grey lighten-4 waves-effect"><a href="/chapter/3">3</a></li>
    <li class="waves-effect"><a href="/puzzle/7">3-1</a></li>
    <li class="waves-effect"><a href="/puzzle/8">3-2</a></li>
    <li class="active indigo lighten-2"><a href="#!">3-3</a></li>
    <li class="grey lighten-4 waves-effect"><a href="/chapter/4">4</a></li>
    <li class="waves-effect"><a href="/puzzle/7">4-1</a></li>
    <li class="waves-effect"><a href="/puzzle/8">4-2</a></li>
    <li class="grey lighten-4 waves-effect"><a href="/chapter/5">5</a></li>
    <li class="waves-effect"><a href="/chapter/4"><i class="material-icons">chevron_right</i></a></li>
  </ul>
}

#embed("spo_base")
